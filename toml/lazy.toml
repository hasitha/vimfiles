[[plugins]]
repo = 'thinca/vim-unite-history'
on_if = 1
on_source = 'unite.vim'

[[plugins]]
repo = 'Shougo/unite-build'
on_if = 1
on_source = 'unite.vim'

[[plugins]]
repo = 'raw1z/unite-rspec'
on_if = 1
on_source = 'unite.vim'

[[plugins]]
repo = 'ujihisa/unite-colorscheme'
on_if = 1
on_source = 'unite.vim'
hook_add = '''
  nnoremap <silent> [unite]c :<C-u>Unite -auto-resize -auto-preview -buffer-name=colorschemes colorscheme<cr>
'''

[[plugins]]
repo = 'raw1z/unite-projects'
on_if = 1
on_source = 'unite.vim'
hook_add = '''
  nnoremap <silent> [unite]p :<C-u>Unite -auto-resize projects<cr>
'''

[[plugins]]
repo = 'osyo-manga/unite-quickfix'
on_if = 1
on_source = 'unite.vim'
hook_add = '''
  nnoremap <silent> [unite]q :<C-u>Unite -auto-resize -auto-preview quickfix<cr>
'''

[[plugins]]
repo = 'Shougo/unite-outline'
on_if = 1
on_source = 'unite.vim'
hook_add = '''
  nnoremap <silent> [unite]o :<C-u>Unite -auto-resize -buffer-name=outline outline<cr>
'''

[[plugins]]
repo = 'osyo-manga/unite-filetype'
on_if = 1
on_source = 'unite.vim'

[[plugins]]
repo = 'Shougo/neoyank.vim'
on_if = 1
on_source = 'unite.vim'
hook_add = '''
  nnoremap <silent> [unite]y :<C-u>Unite -buffer-name=yanks history/yank<cr>
'''

[[plugins]]
repo = 'Shougo/neocomplete.vim'
depends = 'context_filetype.vim'
if = "!has('nvim') && has('lua')"
on_event = 'InsertEnter'
hook_source = '''
  let g:neocomplete#enable_at_startup = 1
'''

[[plugins]]
repo = 'Shougo/neosnippet.vim'
depends = ['neosnippet-snippets', 'context_filetype.vim']
if = "!has('nvim')"
on_event = 'InsertCharPre'
on_ft = 'snippet'

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'Shougo/neossh.vim'
on_ft = ['vimfiler', 'vimshell']

[[plugins]]
repo = 'Shougo/vimfiler.vim'
depends = 'unite.vim'
on_map = {n = '<Plug>'}
on_if = "isdirectory(bufname('%'))"
hook_add = '''
  nnoremap <space>e :VimFiler -create<CR>
  nnoremap <space>s :new <bar> VimFiler -create<CR>
  nnoremap <space>v :vnew <bar> VimFiler -create<CR>
'''
hook_source = '''
  call vimfiler#custom#profile('default', 'context', {
  \   'safe' : 0
  \ })

  let g:vimfiler_as_default_explorer=1
  let g:vimfiler_time_format="%d/%m/%y %H:%M"

  if executable('qlmanage')
    let g:vimfiler_quick_look_command = 'qlmanage -p'
  endif
'''

[[plugins]]
repo = 'Shougo/junkfile.vim'
on_source = 'unite.vim'
hook_add = '''
  nnoremap <silent> [Window]e :<C-u>Unite junkfile/new junkfile -start-insert<CR>
'''
hook_source = '''
  let g:junkfile#directory=expand("~/.vim/.cache/junk")
'''

[[plugins]]
repo = 'Shougo/unite-outline'
on_source = 'unite.vim'
hook_add = '''
  nnoremap <silent> [unite]o :<C-u>Unite -auto-resize -buffer-name=outline outline<cr>
'''

[[plugins]]
repo = 'Shougo/neco-vim'
on_ft = 'vim'

[[plugins]]
repo = 'Shougo/neoinclude.vim'
on_if = 1

[[plugins]]
repo = 'Shougo/neco-syntax'
on_source = ['neocomplete.vim', 'deoplete.nvim']

[[plugins]]
repo = 'Shougo/vinarise.vim'
on_cmd = 'Vinarise'
hook_add = 'let g:vinarise_enable_auto_detect = 1'

[[plugins]]
repo = 'kana/vim-niceblock'
on_map = {x = '<Plug>'}
hook_add = '''
  xmap I  <Plug>(niceblock-I)
  xmap A  <Plug>(niceblock-A)
'''

[[plugins]]
repo = 'thinca/vim-quickrun'
on_map = {n = '<Plug>'}
hook_source = '''
  let g:quickrun_no_default_key_mappings = 1
'''

[[plugins]]
repo = 'tsukkee/unite-tag'
on_source = 'unite.vim'
hook_add = '''
  nnoremap <silent> [unite]t :<C-u>Unite -auto-resize -buffer-name=tag tag tag/file<cr>
'''

[[plugins]]
repo = 'tyru/open-browser.vim'
on_if = 1
hook_add = '''
  nmap gx <Plug>(openbrowser-smart-search)
  vmap gx <Plug>(openbrowser-smart-search)
'''
hook_source = '''
  let g:netrw_nogx = 1 " disable netrw's gx mapping.
  let g:openbrowser_default_search = "duckduckgo"
'''

[[plugins]]
repo = 'rhysd/accelerated-jk'
on_map = {n = '<Plug>'}
hook_add = '''
  nmap <silent>j <Plug>(accelerated_jk_gj)
  nmap <silent>k <Plug>(accelerated_jk_gk)
'''

[[plugins]]
repo = 't9md/vim-choosewin'
on_map = {n = '<Plug>'}
hook_add = '''
  nmap <space><space>  <Plug>(choosewin)
  let g:choosewin_overlay_enable = 1
  let g:choosewin_overlay_clear_multibyte = 1
  let g:choosewin_blink_on_land = 0
'''

[[plugins]]
repo = 'todesking/ruby_hl_lvar.vim'
on_ft = 'ruby'

[[plugins]]
repo = 'kana/vim-operator-replace'
depends = 'vim-operator-user'
on_map = '<Plug>'
hook_add = 'xmap p <Plug>(operator-replace)'

[[plugins]]
repo = 'rhysd/vim-operator-surround'
depends = 'vim-operator-user'
on_map = {n = '<Plug>'}
hook_add = '''
  nmap <silent>sa <Plug>(operator-surround-append)a
  nmap <silent>sd <Plug>(operator-surround-delete)a
  nmap <silent>sr <Plug>(operator-surround-replace)a
  nmap <silent>sc <Plug>(operator-surround-replace)a
'''

[[plugins]]
repo = 'osyo-manga/vim-textobj-multiblock'
depends = 'vim-textobj-user'
on_map = {ox = '<Plug>'}

[[plugins]]
repo = 'osyo-manga/vim-monster'
on_ft = 'ruby'

[[plugins]]
repo = 'easymotion/vim-easymotion'
on_map = {n = '<Plug>'}
hook_add = '''
  nmap <Leader><Leader>s <Plug>(easymotion-s2)
  map <Leader>j <Plug>(easymotion-j)
  map <Leader>k <Plug>(easymotion-k)
'''
hook_source = '''
  let g:EasyMotion_smartcase = 1

  hi link EasyMotionTarget ErrorMsg
  hi link EasyMotionShade  Comment

  hi link EasyMotionTarget2First MatchParen
  hi link EasyMotionTarget2Second MatchParen

  hi link EasyMotionMoveHL Search
'''

[[plugins]]
repo = 'Konfekt/FastFold'
on_event = 'InsertEnter'
hook_post_source = 'FastFoldUpdate'

