[[plugins]]
repo = 'Shougo/unite.vim'
hook_source = 'source ~/.vim/rc/plugins/unite.rc.vim'
hook_add = '''
  nmap <space> [unite]
  nnoremap [unite] <nop>

  if has('win32') || has('win64')
    nnoremap <silent> [unite]f :<C-u>Unite -toggle -auto-resize -buffer-name=files file_rec<cr><c-u>
  else
    if has('nvim')
      nnoremap <silent> [unite]f :<C-u>Unite -toggle -auto-resize -buffer-name=files file_rec/neovim<cr><c-u>
    else
      nnoremap <silent> [unite]f :<C-u>Unite -toggle -auto-resize -buffer-name=files file_rec/async<cr><c-u>
    endif
  endif

  nnoremap <silent> [unite]l :<C-u>Unite -auto-resize -buffer-name=line line<cr>
  nnoremap <silent> [unite]b :<C-u>Unite -auto-resize -buffer-name=buffers buffer<cr>
  nnoremap <silent> [unite]k :<C-u>Unite -no-quit -auto-preview -buffer-name=search grep:.<cr>
  nnoremap <silent> [unite]m :<C-u>Unite -auto-resize -buffer-name=mappings mapping<cr>
  nnoremap <silent> [unite]c :<C-u>Unite -auto-resize -auto-preview -buffer-name=colorschemes colorscheme<cr>
  nnoremap <silent> [unite]p :<C-u>Unite -auto-resize projects<cr>
  nnoremap <silent> [unite]q :<C-u>Unite -auto-resize -auto-preview quickfix<cr>
  nnoremap <silent> [unite]o :<C-u>Unite -auto-resize -buffer-name=outline outline<cr>
  nnoremap <silent> [unite]y :<C-u>Unite -buffer-name=yanks history/yank<cr>
  nnoremap <silent> [unite]o :<C-u>Unite -auto-resize -buffer-name=outline outline<cr>
  nnoremap <silent> [unite]t :<C-u>Unite -auto-resize -buffer-name=tag tag tag/file<cr>
  nnoremap <silent> [unite]e :<C-u>Unite junkfile/new junkfile -start-insert<CR>
  nnoremap <silent> [unite]h :<C-u>Unite -auto-resize -buffer-name=help help<cr>

  nnoremap <silent> <leader><leader>r <Plug>(unite_redraw)
'''

[[plugins]]
repo = 'Shougo/unite-help'
on_if = 1
on_source = 'unite.vim'

[[plugins]]
repo = 'thinca/vim-unite-history'
on_if = 1
on_source = 'unite.vim'

[[plugins]]
repo = 'Shougo/unite-build'
on_if = 1
on_source = 'unite.vim'

[[plugins]]
repo = 'raw1z/unite-rspec'
on_if = 1
on_source = 'unite.vim'

[[plugins]]
repo = 'ujihisa/unite-colorscheme'
on_if = 1
on_source = 'unite.vim'

[[plugins]]
repo = 'raw1z/unite-projects'
depends = 'vimfiler.vim'
on_if = 1
on_source = 'unite.vim'

[[plugins]]
repo = 'osyo-manga/unite-quickfix'
on_if = 1
on_source = 'unite.vim'

[[plugins]]
repo = 'Shougo/unite-outline'
on_if = 1
on_source = 'unite.vim'

[[plugins]]
repo = 'osyo-manga/unite-filetype'
on_if = 1
on_source = 'unite.vim'

[[plugins]]
repo = 'Shougo/neocomplete.vim'
depends = 'context_filetype.vim'
if = "!has('nvim') && has('lua')"
on_event = 'InsertEnter'
hook_source = '''
  let g:neocomplete#enable_at_startup = 1
'''

[[plugins]]
repo = 'Shougo/neosnippet.vim'
depends = ['neosnippet-snippets', 'context_filetype.vim']
if = "!has('nvim')"
on_event = 'InsertCharPre'
on_ft = 'snippet'

[[plugins]]
repo = 'Shougo/neossh.vim'
on_ft = ['vimfiler', 'vimshell']

[[plugins]]
repo = 'Shougo/vimfiler.vim'
depends = 'unite.vim'
on_map = {n = '<Plug>'}
on_if = "isdirectory(bufname('%'))"
hook_source = 'source ~/.vim/rc/plugins/vimfiler.rc.vim'
hook_add = '''
  nnoremap <space>e :VimFiler<CR>
  nnoremap <space>s :new <bar> VimFiler<CR>
  nnoremap <space>v :vnew <bar> VimFiler<CR>
'''

[[plugins]]
repo = 'Shougo/junkfile.vim'
on_source = 'unite.vim'

[[plugins]]
repo = 'Shougo/unite-outline'
on_source = 'unite.vim'

[[plugins]]
repo = 'Shougo/neco-vim'
on_ft = 'vim'

[[plugins]]
repo = 'Shougo/neoinclude.vim'
on_if = 1

[[plugins]]
repo = 'Shougo/neco-syntax'
on_source = ['neocomplete.vim', 'deoplete.nvim']

[[plugins]]
repo = 'Shougo/vinarise.vim'
on_cmd = 'Vinarise'
hook_add = 'let g:vinarise_enable_auto_detect = 1'

[[plugins]]
repo = 'kana/vim-niceblock'
on_map = {x = '<Plug>'}
hook_add = '''
  xmap I  <Plug>(niceblock-I)
  xmap A  <Plug>(niceblock-A)
'''

[[plugins]]
repo = 'thinca/vim-quickrun'
on_map = {n = '<Plug>'}
hook_source = '''
  let g:quickrun_no_default_key_mappings = 1
'''

[[plugins]]
repo = 'tsukkee/unite-tag'
on_source = 'unite.vim'

[[plugins]]
repo = 'tyru/open-browser.vim'
on_if = 1
hook_add = '''
  nmap gx <Plug>(openbrowser-smart-search)
  vmap gx <Plug>(openbrowser-smart-search)
'''
hook_source = '''
  let g:netrw_nogx = 1 " disable netrw's gx mapping.
  let g:openbrowser_default_search = "duckduckgo"
'''

[[plugins]]
repo = 'rhysd/accelerated-jk'
on_map = {n = '<Plug>'}
hook_add = '''
  nmap <silent>j <Plug>(accelerated_jk_gj)
  nmap <silent>k <Plug>(accelerated_jk_gk)
'''

[[plugins]]
repo = 't9md/vim-choosewin'
on_map = {n = '<Plug>'}
hook_source = 'source ~/.vim/rc/plugins/choosewin.rc.vim'
hook_add = '''
  nmap <space><space>  <Plug>(choosewin)
'''

[[plugins]]
repo = 'todesking/ruby_hl_lvar.vim'
on_ft = 'ruby'

[[plugins]]
repo = 'kana/vim-operator-replace'
depends = 'vim-operator-user'
on_map = '<Plug>'
hook_add = 'xmap p <Plug>(operator-replace)'

[[plugins]]
repo = 'rhysd/vim-operator-surround'
depends = 'vim-operator-user'
on_map = {n = '<Plug>'}
hook_add = '''
  nmap <silent>sa <Plug>(operator-surround-append)a
  nmap <silent>sd <Plug>(operator-surround-delete)a
  nmap <silent>sr <Plug>(operator-surround-replace)a
  nmap <silent>sc <Plug>(operator-surround-replace)a
'''

[[plugins]]
repo = 'osyo-manga/vim-textobj-multiblock'
depends = 'vim-textobj-user'
on_map = {ox = '<Plug>'}

[[plugins]]
repo = 'Konfekt/FastFold'
on_event = 'InsertEnter'
hook_post_source = 'FastFoldUpdate'

[[plugins]]
repo = 'Shougo/deoplete.nvim'
if = "has('nvim')"
depends = 'context_filetype.vim'
on_event = "InsertEnter"
hook_source = '''
  let g:deoplete#enable_at_startup = 1
  source ~/.vim/rc/plugins/deoplete.rc.vim
'''

[[plugins]]
repo = 'mbbill/undotree'
on_cmd = 'UndotreeToggle'
hook_source = 'source ~/.vim/rc/plugins/undotree.rc.vim'
hook_add = '''
  nmap <leader>u :UndotreeToggle<CR>
'''

[[plugins]]
repo = 'vim-airline/vim-airline'
depends = 'vim-airline-themes'
on_event = 'VimEnter'
hook_source = 'source ~/.vim/rc/plugins/airline.rc.vim'

[[plugins]]
repo = 'vim-airline/vim-airline-themes'

[[plugins]]
repo = 'ap/vim-css-color'
on_ft = ['css', 'scss', 'sass']

[[plugins]]
repo = 'raw1z/vim-repl'
on_cmd = ['SendToREPL', 'SendVisualSelectionToREPL']
hook_add = '''
  nnoremap <leader>cc :SendToREPL<CR>
  vnoremap <leader>cc :SendVisualSelectionToREPL<CR>
'''

